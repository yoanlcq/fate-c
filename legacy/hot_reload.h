

/* Current Bet : */

/* In foo.h 
 * FATE_API is also defined for Doxygen. 
 * FATE_HR_SONAME and such are M4 macros, expanding to nothing otherwise. */
FATE_HR_SONAME(fate_foo)
/* FATE_HR_HEADER(fate/foo.h) Maybe useless ? */
FATE_HR_ADDSRC(fate/foo.c)
FATE_HR_ADDSRC(fate/foo_impl.c)
FATE_HR_FUNC(void,fate_foo_setup,(void));
FATE_HR_FUNC(long,fate_foo_dox,(int bar));


/* In foo.c 
 * Used for non-HR builds, or the .so. */
void fate_foo_setup(void) {
    // Completely regular code
}
long fate_foo_dox(int bar) {
    return bar+42;
}

/* In foo.hr.c 
 * Generated by foo.h with either the C preprocessor or M4
 * Used for HR builds. */
void (*fate_foo_setup)(void);
long (*fate_foo_dox)(int bar);


/* hr.h 
 * To make the HR module hot-reloadable itself, just use the macros as with
 * a regular hot-reloadable module.
 * Of course, this function right here must be called before ANY other at 
 * program startup. */
void fate_hr_setup(void);

/* hr.c
 * Generated by the build process, using M4 on .h files : */
#include <fate/foo.h>
//Other such includes, etc.

void fate_hr_setup(void) {
    foreach(module) {
        set_funcptrs(module);
        watch_files();
        files.onchange = set_funcptrs(module);
    }
}








/* In fate/hot_reload.h */


void fate_hr_reload(const char *modname, const char *symbol);

#ifdef FATE_HOT_RELOADABLE_BUILD
#define FATE_APIDEF(type,name,args)   extern FATECALL type (*name)args;
#define FATE_API(type,name,args,body)        FATECALL type (*name)args;
#define FATE_HR_HOOK(modname,suffix) \
            { modname##_##suffix, #modname "_" #suffix }
#else
#define FATE_APIDEF(type,name,args)   FATE_EXPORT FATECALL type name args;
#define FATE_API(type,name,args,body) FATE_EXPORT FATECALL type name args{body}
#define FATE_HR_RELOAD(modname,suffix)
#endif



/* In foo.h */

#ifdef FATE_HOT_RELOADABLE_BUILD
extern void (*fate_foo_setup)(void);
extern void (*fate_foo_dump)(void);
#else


/* In foo.c */

#ifdef FATE_HOT_RELOADABLE_BUILD
void (*fate_foo_setup)(void);
#else
void fate_foo_setup(void) {
#ifdef FATE_HOT_RELOADABLE_MODULE
    static const fate_hr_spec spec = {
        "fate_foo",
        {
            "fate/foo.c", 
            "fate/foo_impl.c", 
            NULL
        },{
            { &fate_foo_setup, "@setup" },
            { &fate_foo_dump, "@dump" },
            {NULL, NULL}
        }
    };
    fate_hr_register(&spec);
#endif
    blahblah...
}
#endif

#ifdef FATE_HOT_RELOADABLE_BUILD
void (*fate_foo_dump)(void);
#else
void fate_foo_dump(void) {
    foo...
    bar...
}
#endif
