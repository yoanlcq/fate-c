So what's a locator anyway ?

--- User-side :
cj_locate_res(&path, "bar/foo.sav");
fe_iov_load(iov, path);
cj_locate_free(path);


--- Déclaration de l'API :
bool fe_fs_{file|wget}_{load|store|exists|delete}[_sync]([fe_iov *iov,] fe_fpath ps);

--- API Utilisateur :
void mygame_locate_[res|persistent](fe_fpath *ps, const char *name) {
    /* Apply all transforms on 'ps', using conditional compilation. */
    fe_iov_printf();
}
void mygame_locate_deinit(fe_fpath *ps) {
    fe_mem_heapfree();....
}
Ou un autre moyen plus malin avec du Thread-Local Storage :
On a un pointeur statique sur le dernier chemin utilisé, et il est libéré
au prochain appel.



Last updated : SDL 2.0.4

- Emscripten:
  - MEMFS
    APIs: stdio, MEMFS through EM_ASM
    locator : file-path
    access : read-write
    remarks:
      Use the '--preload-file <asset>' compiler option.
      <asset> can refer to a directory.
  - WGET
    APIs: emscripten_wget_data*()
    locator: url
    access: read-only
    remarks:
      When testing locally, and <url> is relative, prefer using Firefox,
      because some browsers prevent download requests from file:/// protocol.
      This can be asserted by the API and throw an appropriate exception.
      If <url> is relative, make sure your assets are in the page's directory.
      wget() cannot load less than full files.
  - IndexedDB
    APIs: IDBFS through EM_ASM, emscripten_ibd_load*()...
    locator: idb-name, file-path
    size-limit:
      50MB on desktop Firefox
      5MB on mobile Firefox
      10MB on IE 10
      No known limit on Chrome ??
      In all cases, when the app attempts to store more than this limit,
      the browser asks the user for permission to increase the max. size.
    remarks:
      The only guaranteed persistent storage.
      Can only load/store full files at once.
  - SDL_GetBasePath()
      returns: "/"
  - SDL_GetPrefPath()
      locator: organization, app-name, file-path
      returns: "/libsdl/<organization>/<app-name>/"

- iOS: See OS X

- Android:
  - SDL_AndroidGetInternalStoragePath()
    returns: "<absolute-files-dir>/"
    Where <absolute-files-dir> is
        Java : SDLActivity.getContext().getFilesDir().getAbsolutePath();
  - SDL_AndroidGetExternalStoragePath()
    returns: "<absolute-externalfiles-dir>/"
    Where <absolute-externalfiles-dir> is
        Java : SDLActivity.getContext().getExternalFilesDir().getAbsolutePath();
  - SDL_GetBasePath()
      returns: NULL
  - SDL_GetPrefPath()
      locator: organization, app-name, file-path
      returns: "<internal-storage>/"

- WinRT:
  - SDL_WinRTGetFSPathUTF8(SDL_WINRT_PATH_INSTALLED_LOCATION)
  Windows::ApplicationModel::Package::Current->InstalledLocation->Path->Data()
  - SDL_WinRTGetFSPathUTF8(SDL_WINRT_PATH_LOCAL_FOLDER)
  Windows::Storage::ApplicationData::Current->LocalFolder->Path->Data()
  - SDL_WinRTGetFSPathUTF8(SDL_WINRT_PATH_ROAMING_FOLDER)
  Windows::Storage::ApplicationData::Current->RoamingFolder->Path->Data()
  - SDL_WinRTGetFSPathUTF8(SDL_WINRT_PATH_TEMP_FOLDER)
  Windows::Storage::ApplicationData::Current->TemporaryFolder->Path->Data()
  - SDL_GetBasePath()
      returns: "<installed-location>\\"
  - SDL_GetPrefPath()
      locator: organization, app-name, file-path
      returns: "<local-folder>\\<organization>\\<app-name>\\"

- Linux (or FreeBSD and Solaris):
  - SDL_GetBasePath()
      returns: "<absolute-executable-dir>/"
  - SDL_GetPrefPath()
      locator: organization, app-name, file-path
      returns: "<data-home>/<organization>/<app-name>/"
      Where <data-home> is :
        $XDG_DATA_HOME
        otherwise $HOME/.local/share

- OS X:
  - SDL_GetBasePath()
      returns : "<complicated>"
  - SDL_GetPrefPath()
      locator: organization, app-name, file-path
      returns: "<udir>/<organization>/<app-name>"
      Where <udir> is
      NSSearchPathForDirectoriesInDomains(NSApplicationSupportDirectory,       NSUserDomainMask, YES)[0]

- Windows:
  - SDL_GetBasePath()
    returns: "<absolute-executable-dir>\\"
  - SDL_GetPrefPath()
    locator: organization, app-name, file-path
    returns: "<appdata-dir>\\<organization>\\<app-name>"
      Where <appdata-dir> is SHGetFolderPathW(NULL, CSIDL_APPDATA ...);
      MSDN Says : A typical path is
      C:\Documents and Settings\<username>\Application Data

