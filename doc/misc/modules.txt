
- Cfg
  Reading runtime configuration files.
  Like with ./game --fate-opts @file

- Log
  printf-like functions multiplexed at runtime.

- Tracer
  Trace function calls and parameters where needed through 
  macros and C11's generic construct.

- Mem
  Utility functions, fate_malloc() for profiling and debugging.

- Sys
  Common abstraction for platform-specific routines, crash handling.

- Threads
  Thread implementation selection, Deadlock detection and more.
  - Future
    Task graphs, promises, file actions (+FTP & SMTP), scheduling, 
    with profiling.

- Strcall
  Support for "call-by-string" functions.

- Net
  Support for resolving addresses, sending/receiving packets though TCP or UDP,
  and more, including support for IPv6.

- VFS
  Virtual Filesystem, Journal, Node resolution etc.
  - DFA (Direct Field Access)
    Bypassing Node resolution for mandatory variables, such as x, y...
  - Time travel, Snapshot, transactions, rewind, replay, deterministic shared 
    rand()...
  - Support for proxy nodes. That is, providing values Just In Time, or
    computing them.
  - Engine Event
    Plugin API.

- FST
  FST-to-C translator.

- Hot reloading
  - Filewatch
  Watching changes on user files.
  - CC invoker
  Invoking the user's C compiler to build shared objects and loading those.

- Image
  - SDL_IMG backend
    Loading images...

- Vector/Matrix/Quaternion library
  - Linmath backend

- Video
  - Assimp backend
    Loading Model data, animations, etc.
  - D3D backend
  - Vulkan backend
  - OpenGL backend
    Rendering, recording, debug context...
  - libavcodec/libtheora/libogg backend
    Exporting to video

- Audio
  - Manipulation, generation
    Binauralizing, Speeding up/slowing down sounds, generating variations...
  - SndFile backend
    Loading music data
  - OpenAL backend
    Playing, rendering, recording...
  - SDL_Mixer backend

