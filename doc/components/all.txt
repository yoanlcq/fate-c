Subsystems :
- Multithreading
- Async IO
- Sockets (+ websocket server)
- Hot-reloading
- i18n
- log
- mem
- perf


-- These are functionalities, but NOT components :

- schema
- inspector
- serializable
- deterministic
- fsm (serial vs parallel, execution order)


-- Global components :
fe_input_mouse_state
fe_input_keyboard_state
fe_input_joy_state
fe_input_ai
fe_haptic


-- Here are the components :

---- Input
fe_input_seq_watcher

---- Behavioural
fe_transaction
fe_shapeshifter

---- Views, render targets
fe_view3d
fe_view3d_fx
fe_viewport
fe_window (a window also has a set of viewports, each associated with a 
               view. There's only one "master" video backend used.
               To render with several video backends, each should render to
               a texture, that the "master" will later display.
               To render from several backends, each one must render to a
               texture it owns, then displayed by the "master" as textured 
               quads.)
fe_tex2d
fe_tex3d

---- Space and Time
fe_transform3d
fe_pos3d
fe_vel3d
fe_accel3d
fe_rotation3d
fe_angular_vel3d
fe_angular_accel3d
fe_scale3d
fe_scalar_vel3d
fe_scalar_accel3d
fe_time
fe_time_traveller
fe_time_stretcher

---- Output
fe_audio
fe_audio_reverse (preparing some audio to play backwards)
fe_audio_stretch (time stretch. Negative stretch requires audio_reverse.)
fe_audio_fx_stack ??
fe_audio_midi_player ???

---- Graphics
fe_text2d
fe_terrain3d ??
fe_mesh3d
fe_mesh3d_data
fe_material
fe_spritepack
fe_shape2d
fe_opacity //Maybe merge later into fe_material.
fe_opacity_vel
fe_opacity_accel
fe_postfx_stack
fe_postfx_stack_per_view

---- Deterministic Physics
fe_collision_data
fe_tangible (uses collision data)
fe_hit_receiver (same)
fe_hit_sender (same)

---- Space Continuum
fe_portal
fe_region

---- Experimental
video_backend_access
audio_backend_access
cj_speech_synthesizer
gr_speech_synthesizer
steam_achievements
steam_matchmaking
